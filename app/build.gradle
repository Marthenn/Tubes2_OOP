/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.itextpdf:itextpdf:5.5.13.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.12.5'
    testImplementation 'org.projectlombok:lombok:1.18.22'


    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
    main {
        java {
            // plugin
            // use : gradle run -Pplugin=variabel_tanpa_quote
            if (project.hasProperty('plugin')) {
                include("Core/**")
                include("GUI/**")
                include("Plugins/**")

                include("Plugins/" + property('plugin'))

                include("Main.java")
            }
            // main program
            else
            {
                include("Core/**")
                include("GUI/**")
                include("Plugins/**")

                include("Main.java")
            }
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'Main'
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    dependsOn test
}



